//Tiny Parser Generator v1.3
//Copyright Â© Herre Kuijpers 2008-2012

<% @TinyPG Namespace="Tee" %>
PLUS 		-> @"\+";
MINUS 		-> @"-";
STAR 		-> @"\*";
FSLASH		-> @"\/";
EXPONENT	-> @"\^";
LPAREN 	-> @"\(";
RPAREN 	-> @"\)";
LBRACKET	-> @"\[";
RBRACKET	-> @"\]";
EQUAL		-> @"=";
LT		-> @"<";
GT		-> @">";
LTE		-> @"<=";
GTE		-> @">=";
NOTEQUAL	-> @"<>";
AND		-> @"[Aa][Nn][Dd]";
OR		-> @"[Oo][Rr]";
NOT		-> @"[Nn][Oo][Tt]";
DOT		-> @"\.";
COMMA		-> @",";
EOF        	-> @"^$";

TRUE        	-> @"[Tt][Rr][Uu][Ee]";
FALSE        	-> @"[Ff][Aa][Ll][Ss][Ee]";
NULL        	-> @"[Nn][Uu][Ll][Ll]";
INTEGER	-> @"(\+|-)?[0-9]+";
DECIMAL	-> @"(\+|-)?[0-9]*\.[0-9]+";
STRING 	-> @"""([^""\\]*(\\""[^""\\]*)*)""";
FUNCTION	-> @"[a-zA-Z_][a-zA-Z0-9_]*\(";
IDENTIFIER	-> @"[a-zA-Z_][a-zA-Z0-9_]*";
[Skip] WS	-> @"\s+";

Start			-> Expression ? EOF;
Expression		-> OrExpression;
OrExpression		-> AndExpression (OR AndExpression)*;
AndExpression		-> NotExpression (AND NotExpression)*;
NotExpression		-> NOT? Compare;
Compare 		-> Addition ((EQUAL | GT | LT | GTE | LTE | NOTEQUAL) Addition)*;
Addition 		-> Multiplication ((PLUS | MINUS) Multiplication)*;
Multiplication 	-> Power ((STAR | FSLASH) Power)*;
Power 			-> Negation (EXPONENT Negation)*;
Negation		-> MINUS? Member;
Member 		-> Base (DOT MemberAccess | LBRACKET IndexAccess)*;
MemberAccess 		-> IDENTIFIER;
Base 			-> Literal | Group | FunctionCall | Variable;
Variable		-> IDENTIFIER;
IndexAccess		-> (STRING|INTEGER) RBRACKET;
FunctionCall		-> FUNCTION ArgumentList? RPAREN;
ArgumentList		-> Expression (COMMA Expression)*;
Literal		-> STRING | DECIMAL | INTEGER | TRUE | FALSE | NULL;
Group			-> LPAREN Expression RPAREN;
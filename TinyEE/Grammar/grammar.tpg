<% @TinyPG Namespace="TinyEE" %>

PLUS 		-> @"\+";
MINUS 		-> @"-";
STAR 		-> @"\*";
FSLASH		-> @"\/";
EXPONENT	-> @"\^";
MODULO		-> @"\%";
LPAREN 	-> @"\(";
RPAREN 	-> @"\)";
LBRACKET	-> @"\[";
RBRACKET	-> @"\]";
LBRACE		-> @"\{";
RBRACE		-> @"\}";
EQUAL		-> @"=";
LT		-> @"<";
GT		-> @">";
LTE		-> @"<=";
GTE		-> @">=";
NOTEQUAL	-> @"<>";
AND		-> @"[Aa][Nn][Dd]";
OR		-> @"[Oo][Rr]";
NOT		-> @"[Nn][Oo][Tt]";
DOT		-> @"\.";
DOTDOT		-> @"\.\.";
COMMA		-> @",";
COLON		-> @":";
EOF        	-> @"^$";

TRUE        	-> @"[Tt][Rr][Uu][Ee]";
FALSE        	-> @"[Ff][Aa][Ll][Ss][Ee]";
NULL        	-> @"[Nn][Uu][Ll][Ll]";
INTEGER	-> @"(\+|-)?[0-9]+";
DECIMAL	-> @"(\+|-)?[0-9]*\.[0-9]+";
RANGE		-> @"[0-9]+\.\.[0-9]+";
STRING 	-> @"""([^""\\]*(\\""[^""\\]*)*)""";
FUNCTION	-> @"[a-zA-Z][a-zA-Z0-9_]*\(";
IDENTIFIER	-> @"[a-zA-Z_$][a-zA-Z0-9_$]*";
[Skip] WS	-> @"\s+";

Start			-> Expression ? EOF;
Expression		-> OrExpression;
OrExpression		-> AndExpression (OR AndExpression)*;
AndExpression		-> NotExpression (AND NotExpression)*;
NotExpression		-> NOT? Compare;
Compare 		-> Addition ((EQUAL | GT | LT | GTE | LTE | NOTEQUAL) Addition)*;
Addition 		-> Multiplication ((PLUS | MINUS) Multiplication)*;
Multiplication 	-> Power ((STAR | FSLASH | MODULO) Power)*;
Power 			-> Negation (EXPONENT Negation)*;
Negation		-> MINUS? Member;
Member 		-> Base (DOT MemberAccess | LBRACKET IndexAccess)*;
MemberAccess 		-> IDENTIFIER | FunctionCall;
Base 			-> Literal | Group | FunctionCall | Variable | ListLiteral | HashLiteral;
ListLiteral		-> LBRACKET ArgumentList? RBRACKET;
HashLiteral		-> LBRACE PairList? RBRACE;
PairList		-> Pair (COMMA Pair)*;
Pair			-> STRING COLON Expression;
Variable		-> IDENTIFIER;
IndexAccess		-> (Expression) RBRACKET;
FunctionCall		-> FUNCTION ArgumentList? RPAREN;
ArgumentList		-> Expression (COMMA Expression)*;
Literal		-> STRING | RANGE | DATETIME | DECIMAL | INTEGER | TRUE | FALSE | NULL;
Group			-> LPAREN Expression RPAREN;